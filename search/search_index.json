{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Mobile Network Capacity Model Background The Mobile Network Capacity Model is a tool that allows for the calculation of available throughput within a 4G mobile network service area and indicates whether this throughput is sufficient to connect a point of interest (POI: hospital, school, house, etc.) to the internet by comparing the available throughput with the POI's requirements. Table of Contents Getting Started : Essential information for setting up and using the tool. Preparing Your Input Data : Guidelines on how to format and prepare your input data for the model. Network Capacity Model : Detailed description of how the model calculates available throughput for points of interest (POIs). Link Budget Model : Information about the components of the Link Budget Model. Functions Documentation : Detailed documentation for the functions used in the models. License : Terms under which the Mobile Network Capacity Model is distributed.","title":"Home"},{"location":"#mobile-network-capacity-model","text":"","title":"Mobile Network Capacity Model"},{"location":"#background","text":"The Mobile Network Capacity Model is a tool that allows for the calculation of available throughput within a 4G mobile network service area and indicates whether this throughput is sufficient to connect a point of interest (POI: hospital, school, house, etc.) to the internet by comparing the available throughput with the POI's requirements.","title":"Background"},{"location":"#table-of-contents","text":"Getting Started : Essential information for setting up and using the tool. Preparing Your Input Data : Guidelines on how to format and prepare your input data for the model. Network Capacity Model : Detailed description of how the model calculates available throughput for points of interest (POIs). Link Budget Model : Information about the components of the Link Budget Model. Functions Documentation : Detailed documentation for the functions used in the models. License : Terms under which the Mobile Network Capacity Model is distributed.","title":"Table of Contents"},{"location":"input-data/","text":"Input data In order to use the tool, you need to provide it with your own data. Specifically, you will need to provide the tables described below. Point of interest data This table should include the following columns: poi_id: A unique identifier for each row/point of interest (POI) lat: the latitude for each point of interest in degrees (WGS84) lon: the longitude for each point of interest in degrees (WGS84) Example: poi_id lat lon 23dd6a45-3656-435b-b3b1-c16efab9daeb 39.00777 1.561872 e13a657c-edf0-4013-92db-6c70136e3ac9 38.90686 1.27542 de75c87b-2676-47be-8454-4c44c4e6f644 38.99313 1.353725 4267fc81-0e9f-40ca-84c8-84529958dc22 39.00427 1.525952 ae0ccc6e-5f91-4a58-a60b-68e8ebcdc797 38.95677 1.323312 Cell site data This table should include the following columns: ict_id: A unique identifier for each row/cell site lat: the latitude for each cell site in degrees (WGS84) lon: the longitude for each cell site in degrees (WGS84) radio_type: the radio type for each cell site, either 3G, 4G, 5G or missing (NaN) Example: ict_id lat lon radio_type 300a1494-68dc-4cb7-9825-1b8d98f07c6e 39.00121 1.439019 3G e47beab8-2b94-4a0f-ad9d-c434dde76a0c 38.96746 1.228496 4G ad9f5591-f2fd-4ec6-a35f-31c4fb8d7013 39.00755 1.541224 4G 86818972-6723-46e5-9916-af01c2be5383 38.8705 1.384335 4G 54f7a596-d5a1-4031-84c5-5d4b61b7cbca 38.8573 1.384546 4G Visibility data (optional) Optionally, you can also provide data on the visibility status between each point of interest and cell site. If this is not provided, then the visibility status is automatically checked by the tool in the background. Each row in this table is a POI-cell site pair, where there is line-of-sight visibility between the two objects. If provided, the visibility table should include the following columns: ict_id: A unique identifier for each cell site poi_id: A unique identifier for each point of interest ground_distance: The ground distance between the cell site and point of interest order: ranking of each point of interest and cell site pair according to ground distance, in increasing order (1=closest cell site) poi_id ict_id ground_distance order 23dd6a45-3656-435b-b3b1-c16efab9daeb f7412e93-8fb4-4abf-a298-8fb0876a97f5 1502 1 23dd6a45-3656-435b-b3b1-c16efab9daeb ad9f5591-f2fd-4ec6-a35f-31c4fb8d7013 1784 2 23dd6a45-3656-435b-b3b1-c16efab9daeb 4ea23bde-9f03-4e96-871d-59276323e1c2 2598 3 e13a657c-edf0-4013-92db-6c70136e3ac9 8a4cfe6a-ce1a-4096-84dc-be09b32b8567 4814 1 de75c87b-2676-47be-8454-4c44c4e6f644 9429f910-1d6b-4e52-8bb4-6f331d21e7ee 646 1 de75c87b-2676-47be-8454-4c44c4e6f644 82e53aaa-57c5-4437-898c-3c8d5c2e8336 1086 2 de75c87b-2676-47be-8454-4c44c4e6f644 2fb90cc1-38d3-4aa7-951c-b9a823a63822 2346 3 Here below is an illustration of line-of-sight visibility between pairs of points of interest and cell sites.","title":"Preparing your input data"},{"location":"input-data/#input-data","text":"In order to use the tool, you need to provide it with your own data. Specifically, you will need to provide the tables described below.","title":"Input data"},{"location":"input-data/#point-of-interest-data","text":"This table should include the following columns: poi_id: A unique identifier for each row/point of interest (POI) lat: the latitude for each point of interest in degrees (WGS84) lon: the longitude for each point of interest in degrees (WGS84) Example: poi_id lat lon 23dd6a45-3656-435b-b3b1-c16efab9daeb 39.00777 1.561872 e13a657c-edf0-4013-92db-6c70136e3ac9 38.90686 1.27542 de75c87b-2676-47be-8454-4c44c4e6f644 38.99313 1.353725 4267fc81-0e9f-40ca-84c8-84529958dc22 39.00427 1.525952 ae0ccc6e-5f91-4a58-a60b-68e8ebcdc797 38.95677 1.323312","title":"Point of interest data"},{"location":"input-data/#cell-site-data","text":"This table should include the following columns: ict_id: A unique identifier for each row/cell site lat: the latitude for each cell site in degrees (WGS84) lon: the longitude for each cell site in degrees (WGS84) radio_type: the radio type for each cell site, either 3G, 4G, 5G or missing (NaN) Example: ict_id lat lon radio_type 300a1494-68dc-4cb7-9825-1b8d98f07c6e 39.00121 1.439019 3G e47beab8-2b94-4a0f-ad9d-c434dde76a0c 38.96746 1.228496 4G ad9f5591-f2fd-4ec6-a35f-31c4fb8d7013 39.00755 1.541224 4G 86818972-6723-46e5-9916-af01c2be5383 38.8705 1.384335 4G 54f7a596-d5a1-4031-84c5-5d4b61b7cbca 38.8573 1.384546 4G","title":"Cell site data"},{"location":"input-data/#visibility-data-optional","text":"Optionally, you can also provide data on the visibility status between each point of interest and cell site. If this is not provided, then the visibility status is automatically checked by the tool in the background. Each row in this table is a POI-cell site pair, where there is line-of-sight visibility between the two objects. If provided, the visibility table should include the following columns: ict_id: A unique identifier for each cell site poi_id: A unique identifier for each point of interest ground_distance: The ground distance between the cell site and point of interest order: ranking of each point of interest and cell site pair according to ground distance, in increasing order (1=closest cell site) poi_id ict_id ground_distance order 23dd6a45-3656-435b-b3b1-c16efab9daeb f7412e93-8fb4-4abf-a298-8fb0876a97f5 1502 1 23dd6a45-3656-435b-b3b1-c16efab9daeb ad9f5591-f2fd-4ec6-a35f-31c4fb8d7013 1784 2 23dd6a45-3656-435b-b3b1-c16efab9daeb 4ea23bde-9f03-4e96-871d-59276323e1c2 2598 3 e13a657c-edf0-4013-92db-6c70136e3ac9 8a4cfe6a-ce1a-4096-84dc-be09b32b8567 4814 1 de75c87b-2676-47be-8454-4c44c4e6f644 9429f910-1d6b-4e52-8bb4-6f331d21e7ee 646 1 de75c87b-2676-47be-8454-4c44c4e6f644 82e53aaa-57c5-4437-898c-3c8d5c2e8336 1086 2 de75c87b-2676-47be-8454-4c44c4e6f644 2fb90cc1-38d3-4aa7-951c-b9a823a63822 2346 3 Here below is an illustration of line-of-sight visibility between pairs of points of interest and cell sites.","title":"Visibility data (optional)"},{"location":"license/","text":"Copyright 2024 INTERNATIONAL TELECOMMUNICATIONS UNION Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \u201cAS IS\u201d AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","title":"License"},{"location":"models-description/capacity-for-pois-calculation/","text":"The Mobile Network Capacity Model The Mobile Network Capacity Model serves as an instrument designed to assess whether a 4G LTE cellular network's internet connectivity is adequate to enable essential locations such as hospitals, schools, and residential homes - referred to as points of interest (POIs) - to access the internet reliably. To delve into how this tool operates, it's important to understand the intricate structure of the LTE channel and some underlying principles of radiocommunications described below. The LTE channel is organized in a complex structure that consists of different elements, such as frames, subframes, slots, resource blocks (RBs), and OFDM symbols (Figure 1). These elements are the ways to organize the transmission of data across a radio channel in time and frequency domains. To check if the available throughput is enough to connect a point of interest to the internet, this tool uses RBs as the smallest resource units that can be allocated to a user. Each user within a mobile coverage area utilizes RBs to send data. The more users there are within the coverage area, the more data is being transmitted, and the more RBs are being consumed. That\u2019s why the tool uses population density maps to count the number of users within a coverage area and utilizes ITU statistics (Figure 2) on annual mobile traffic consumption to estimate the average traffic consumption for subscribers living within this coverage area. Figure 1: LTE FDD frame structure for 20MHz bandwidth channel ( source ) Figure 2: Mobile-broadband Internet Traffic (within the country), in exabytes per year ( source ) The number of RBs utilized by subscribers also depends on the distance from their location to the cell tower; the farther away they are from towers, the more RBs are required to transmit the same amount of data. This is explained by the fact that signal power decreases with distance (Figure 3). This, in turn, decreases the signal to interference and noise ratio (SINR). The lower the SINR, the higher the probability of errors at the receiver side. To reduce the error probability and comply with data transmission standards, user equipment sends channel quality indicator (CQI) information to the base station (Table 1), which is used to choose the modulation and coding scheme (MCS) that defines how many useful bits can be transmitted per Resource Element (RE) and, consequently, per RB, which consists of REs. The better the quality, the higher the MCS, and the more useful data can be transmitted. Conversely, the worse the radio conditions, the lower the MCS, and the less useful data can be transmitted. Therefore, users located far away from the cell tower consume more RBs to transmit the same amount of data: they transmit less data per RB, and more RBs are required to transmit the same amount of data. Figure 3: 4G LTE link budget ( source ) Table 1 - SINR and CQI mapping table in LTE (Source: \"Essentials of LTE and LTE-A\", Autoren Amitabha Ghosh, Rapeepat Ratasuk). SINR [dB] CQI code Modulation Code Rate -6.7 1 QPSK 0.076 -4.7 2 QPSK 0.12 -2.3 3 QPSK 0.19 0.2 4 QPSK 0.3 2.4 5 QPSK 0.44 4.3 6 QPSK 0.59 5.9 7 16QAM 0.37 8.1 8 16QAM 0.48 10.3 9 16QAM 0.6 11.7 10 64QAM 0.45 14.1 11 64QAM 0.55 16.3 12 64QAM 0.65 18.7 13 64QAM 0.75 21.0 14 64QAM 0.85 22.7 15 64QAM 0.93 Thus, to estimate the average available throughput within the mobile coverage area of a particular cell tower, we need to count the amount of consumed RBs and subtract them from the maximum amount of available RBs. The amount of consumed RBs depends on the subscribers' average traffic consumption and their location within the coverage area (Figure 4a). The model makes several simplifications and assumptions. It assumes that the population is equally distributed across the coverage area because, in most cases, there is no data about the antenna sector directions. It breaks down the coverage area into several rings to count the subscribers living within each ring (Figure 4b), using one distance parameter for each ring (Figure 4c) to define the number of consumed RBs for each ring (Figure 5a). Then the model sums up the RB consumptions and subtracts it from the maximum possible RBs for this cell tower. The resulting value is the amount of available RBs that the model uses to compare with the POI throughput requirements (Figure 5b). If the number of RBs (which is defined by the POI throughput requirement and the distance from the cell tower, Figure 5c) required by the POI is less than the number of available RBs, then the capacity is sufficient to connect the POI to the cell tower; it is insufficient otherwise (Figure 5d). Figure 4: Mobile coverage model (subscriber locations) Figure 5: Resource blocks consumption and capacity check","title":"Network Capacity Model"},{"location":"models-description/capacity-for-pois-calculation/#the-mobile-network-capacity-model","text":"The Mobile Network Capacity Model serves as an instrument designed to assess whether a 4G LTE cellular network's internet connectivity is adequate to enable essential locations such as hospitals, schools, and residential homes - referred to as points of interest (POIs) - to access the internet reliably. To delve into how this tool operates, it's important to understand the intricate structure of the LTE channel and some underlying principles of radiocommunications described below. The LTE channel is organized in a complex structure that consists of different elements, such as frames, subframes, slots, resource blocks (RBs), and OFDM symbols (Figure 1). These elements are the ways to organize the transmission of data across a radio channel in time and frequency domains. To check if the available throughput is enough to connect a point of interest to the internet, this tool uses RBs as the smallest resource units that can be allocated to a user. Each user within a mobile coverage area utilizes RBs to send data. The more users there are within the coverage area, the more data is being transmitted, and the more RBs are being consumed. That\u2019s why the tool uses population density maps to count the number of users within a coverage area and utilizes ITU statistics (Figure 2) on annual mobile traffic consumption to estimate the average traffic consumption for subscribers living within this coverage area. Figure 1: LTE FDD frame structure for 20MHz bandwidth channel ( source ) Figure 2: Mobile-broadband Internet Traffic (within the country), in exabytes per year ( source ) The number of RBs utilized by subscribers also depends on the distance from their location to the cell tower; the farther away they are from towers, the more RBs are required to transmit the same amount of data. This is explained by the fact that signal power decreases with distance (Figure 3). This, in turn, decreases the signal to interference and noise ratio (SINR). The lower the SINR, the higher the probability of errors at the receiver side. To reduce the error probability and comply with data transmission standards, user equipment sends channel quality indicator (CQI) information to the base station (Table 1), which is used to choose the modulation and coding scheme (MCS) that defines how many useful bits can be transmitted per Resource Element (RE) and, consequently, per RB, which consists of REs. The better the quality, the higher the MCS, and the more useful data can be transmitted. Conversely, the worse the radio conditions, the lower the MCS, and the less useful data can be transmitted. Therefore, users located far away from the cell tower consume more RBs to transmit the same amount of data: they transmit less data per RB, and more RBs are required to transmit the same amount of data. Figure 3: 4G LTE link budget ( source ) Table 1 - SINR and CQI mapping table in LTE (Source: \"Essentials of LTE and LTE-A\", Autoren Amitabha Ghosh, Rapeepat Ratasuk). SINR [dB] CQI code Modulation Code Rate -6.7 1 QPSK 0.076 -4.7 2 QPSK 0.12 -2.3 3 QPSK 0.19 0.2 4 QPSK 0.3 2.4 5 QPSK 0.44 4.3 6 QPSK 0.59 5.9 7 16QAM 0.37 8.1 8 16QAM 0.48 10.3 9 16QAM 0.6 11.7 10 64QAM 0.45 14.1 11 64QAM 0.55 16.3 12 64QAM 0.65 18.7 13 64QAM 0.75 21.0 14 64QAM 0.85 22.7 15 64QAM 0.93 Thus, to estimate the average available throughput within the mobile coverage area of a particular cell tower, we need to count the amount of consumed RBs and subtract them from the maximum amount of available RBs. The amount of consumed RBs depends on the subscribers' average traffic consumption and their location within the coverage area (Figure 4a). The model makes several simplifications and assumptions. It assumes that the population is equally distributed across the coverage area because, in most cases, there is no data about the antenna sector directions. It breaks down the coverage area into several rings to count the subscribers living within each ring (Figure 4b), using one distance parameter for each ring (Figure 4c) to define the number of consumed RBs for each ring (Figure 5a). Then the model sums up the RB consumptions and subtracts it from the maximum possible RBs for this cell tower. The resulting value is the amount of available RBs that the model uses to compare with the POI throughput requirements (Figure 5b). If the number of RBs (which is defined by the POI throughput requirement and the distance from the cell tower, Figure 5c) required by the POI is less than the number of available RBs, then the capacity is sufficient to connect the POI to the cell tower; it is insufficient otherwise (Figure 5d). Figure 4: Mobile coverage model (subscriber locations) Figure 5: Resource blocks consumption and capacity check","title":"The Mobile Network Capacity Model"},{"location":"models-description/functions-documentation/","text":"Detailed Functions Documentation Introduction The Capacity class is designed for analyzing and calculating mobile network capacity in a given area. It provides methods to analyze cell site coverage, population distribution, and network capacity based on various parameters such as bandwidth, spectrum allocation, and user data consumption. Functionalities and Calculations Initializing the class ( init ) To initialize the class, you need to provide the following parameters: country_code ( str ): ISO3 country code for the area of analysis. data_dir ( str ): Directory path for input data. logs_dir ( str ): Directory path for logs. poi ( PointOfInterestCollection ): Collection of points of interest. cellsites ( CellSiteCollection ): Collection of cell sites. bw_L850 ( float ): Bandwidth in MHz for L700 to L900 spectrum. bw_L1800 ( float ): Bandwidth in MHz for L1800 to L2100 spectrum. bw_L2600 ( float ): Bandwidth in MHz for L2300 to L2600 spectrum. cco ( float ): Control channel overhead in percentage. max_radius ( int ): Maximum buffer radius for analysis. min_radius ( int ): Minimum buffer radius for analysis. radius_step ( int ): Step size for buffer radius increments. angles_num ( int ): Number of angles for analysis. rotation_angle ( float ): Rotation angle in degrees. dlthtarg ( float ): Download throughput target in Mbps. nonbhu ( float ): Connection usage in non-busy hours in percentage. mbb_subscr ( float ): Active mobile-broadband subscriptions per 100 people. You also need to provide the following parameters, although these already come with default values: use_secure_files ( bool , optional): Flag to use secure files for bandwidth data. Default is False . sectors_per_site ( int , optional): Number of sectors per cell site. Default is 3 . cellsite_search_radius ( int , optional): Cell site search radius in meters. Default is 35000 . poi_antenna_height ( int , optional): Point of interest antenna height in meters. Default is 15 . rb_num_multiplier ( int , optional): Resource block number multiplier. Default is 5 . visibility ( VisibilityPairCollection , optional): Collection of visibility pairs. Default is None . area ( gpd.GeoDataFrame , optional): Area of interest. Default is None . dataset_year ( int , optional): Year of the dataset being used. Default is 2020 . one_km_res ( bool , optional): Flag for using 1km resolution data. Default is True . un_adjusted ( bool , optional): Flag for using UN-adjusted data. Default is True . nbhours ( int , optional): Number of non-busy hours per day. Default is 10 . oppopshare ( int , optional): Percentage of population using operator services. Default is 50 . enable_logging ( bool , optional): Flag to enable logging. Default is False . Downlink Bitrate ( get_dl_bitrate ) This method calculates the achievable downlink bitrate for given distances , considering multiple frequency bands (L850, L1800, L2600) and their respective bandwidths. The input is a list, numpy array, or pandas Series containing distances in meters. The output is a numpy array of downlink bitrates (in kbps) corresponding to each input distance. For each frequency band: Uses lookup tables to find bitrates corresponding to input distances. Handles out-of-range distances by assigning NaN values. Computes final bitrates as a weighted sum across all frequency bands. Resource Blocks Requirement Calculation ( poiddatareq ) The poiddatareq method is designed to calculate the number of resource blocks (RBs) necessary to meet a specific download throughput target at a certain distance from a cell site. This method is integral to network capacity analysis as it helps determine if a cell site can provide the required service level at varying distances. The method proceeds as follows: It first checks whether the provided distance exceeds the maximum coverage radius of the cell site. If it does, the method concludes that the download throughput target cannot be met at that distance, and an infinite number of RBs are theoretically required. If the distance is within the acceptable range, the method searches for the achievable downlink bitrate at a given distance using the get_dl_bitrate function. The method then calculates the required number of RBs by dividing the download throughput target (converted to kbps) by the achievable bitrate per RB (accounting for the average number of RBs available for PDSCH). This method is vital for assessing the coverage and capacity limitations of a cell site and is instrumental in network planning and optimization efforts. Bitrate Per Resource Block Calculation ( brrbpopcd ) The brrbpopcd method calculates the bitrate available per resource block at a specified population center distance. This is a key performance indicator that reflects how the network's capacity is distributed spatially. The method involves the following steps: Using get_dl_bitrate , the method identifies the closest distance value that exceeds the given population center distance. It retrieves the achievable bitrate associated with that distance for the specified bandwidth. The method then divides the retrieved achievable bitrate by the average number of resource blocks available for PDSCH to determine the bitrate per resource block at the population center distance. This method is crucial for network performance analysis as it helps to gauge the efficiency of resource block usage in relation to the distance from the cell site, directly impacting the user experience. Average User Bitrate in Non-Busy Hour Calculation ( avubrnonbh ) The avubrnonbh method computes the average bitrate experienced by a user during non-busy hours, providing an estimate of network capacity when it is not heavily loaded. The calculation is based on user data consumption patterns and considers the following parameters: The average user data traffic volume per month ( udatavmonth ) expressed in gigabytes. The percentage of network usage that occurs during non-busy hours ( nonbhu ). The method carries out a sequence of operations to transform the monthly data volume into an hourly rate, adjusting for the percentage of usage during non-busy hours, and converting the final figure into kilobits per second. The formula takes into account the average number of days in a month, the number of non-busy hours per day, and the conversion factors between gigabytes and kilobits. This metric is of significant value for network operators to ensure that their networks are equipped to handle user demands during off-peak times, which is essential for maintaining a high quality of service. User Population Bitrate Per Sector ( upopbr ) This method calculates the total bitrate needed to serve a given population within a cell sector, taking into account the average user bitrate, mobile broadband subscription rate, and the operator's market share. Its inputs are the average user bitrate in non-busy hour in kbps ( avubrnonbh ) and the total population in the area served by the cell sector. Its output is the user Population Bitrate in kbps. User Population Resource Blocks Utilisation ( upoprbu ) This method calculates the number of resource blocks utilized by the user population in a cell sector. Its inputs are the total bitrate required by the user population in kbps ( upopbr ) and the bitrate per resource block at population center distance in kbps ( brrbpopcd ).` Its output is the user population resource blocks utilisation in units. Cell Site Available Capacity Check ( cellavcap ) This method calculates the available capacity at a cell site by subtracting the utilized resource blocks from the total available resource blocks. Its inputs are the number of resource blocks available for the Physical Downlink Shared Channel ( avrbpdsch ) and the number of resource blocks utilized by the user population ( upoprbu ).` The output is the The available capacity at the cell site. Sufficient Capacity Checker ( sufcapch ) This method determines whether the available capacity at a cell site is sufficient to meet the required download throughput target. Its inputs are the available capacity at the cell site ( cellavcap ) and the Resource Blocks Download Throughput Target ( rbdlthtarg ). The output is a True/False flag indicating whether there is sufficient capacity (cellavcap > rbdlthtarg) or not (cellavcap <= rbdlthtarg). Capacity Checker ( capacity_checker ) This method performs a comprehensive capacity check for a cell site, combining the auxiliary functions above. Its inputs are: Distance to the Point of Interest ( d ) Population center distance ( popcd ) Monthly data usage per user ( udatavmonth ) Population served by the cell site ( pop ) The method calculates several intermediate values: Target data rate based on distance ( rbdlthtarg ) Bitrate per resource block at population center ( brrpopcd ) Average user bitrate in non-busy hours ( avubrnonbh ) It then uses these to compute the final outputs: User population bitrate ( upopbr ) User population resource block utilization ( upoprbu ) Available cell capacity ( cellavcap ) Capacity check result ( capcheck ) Capacity Checker Using Buffers Around Cell Sites ( calculate_buffer_areas ) This method performs spatial analysis and capacity assessment for cell sites by creating buffer areas and calculating various metrics. For more information, please refer to the Network Capacity Model section of this documentation. The method doesn't take any inputs beyond the class attributes. It performs several key operations: Geodata preparation Buffer and ring creation around cell sites Visibility analysis (if needed) Capacity calculations at different levels The method calculates several intermediate values: Voronoi polygons for cell sites Buffer areas and rings around cell sites Visibility between POIs and cell sites Population per ring Resource block requirements for download throughput It then uses these to compute the final outputs: User population bitrate per ring User population resource block utilization Available cell capacity Capacity sufficiency check The output is a tuple containing:' A dictionary of GeoDataFrames: 'buffers': Buffer areas around cell sites 'rings': Ring areas around cell sites A GeoDataFrame of POIs within cell site coverage areas, including capacity analysis results","title":"Functions documentation"},{"location":"models-description/functions-documentation/#detailed-functions-documentation","text":"","title":"Detailed Functions Documentation"},{"location":"models-description/functions-documentation/#introduction","text":"The Capacity class is designed for analyzing and calculating mobile network capacity in a given area. It provides methods to analyze cell site coverage, population distribution, and network capacity based on various parameters such as bandwidth, spectrum allocation, and user data consumption.","title":"Introduction"},{"location":"models-description/functions-documentation/#functionalities-and-calculations","text":"","title":"Functionalities and Calculations"},{"location":"models-description/functions-documentation/#initializing-the-class-init","text":"To initialize the class, you need to provide the following parameters: country_code ( str ): ISO3 country code for the area of analysis. data_dir ( str ): Directory path for input data. logs_dir ( str ): Directory path for logs. poi ( PointOfInterestCollection ): Collection of points of interest. cellsites ( CellSiteCollection ): Collection of cell sites. bw_L850 ( float ): Bandwidth in MHz for L700 to L900 spectrum. bw_L1800 ( float ): Bandwidth in MHz for L1800 to L2100 spectrum. bw_L2600 ( float ): Bandwidth in MHz for L2300 to L2600 spectrum. cco ( float ): Control channel overhead in percentage. max_radius ( int ): Maximum buffer radius for analysis. min_radius ( int ): Minimum buffer radius for analysis. radius_step ( int ): Step size for buffer radius increments. angles_num ( int ): Number of angles for analysis. rotation_angle ( float ): Rotation angle in degrees. dlthtarg ( float ): Download throughput target in Mbps. nonbhu ( float ): Connection usage in non-busy hours in percentage. mbb_subscr ( float ): Active mobile-broadband subscriptions per 100 people. You also need to provide the following parameters, although these already come with default values: use_secure_files ( bool , optional): Flag to use secure files for bandwidth data. Default is False . sectors_per_site ( int , optional): Number of sectors per cell site. Default is 3 . cellsite_search_radius ( int , optional): Cell site search radius in meters. Default is 35000 . poi_antenna_height ( int , optional): Point of interest antenna height in meters. Default is 15 . rb_num_multiplier ( int , optional): Resource block number multiplier. Default is 5 . visibility ( VisibilityPairCollection , optional): Collection of visibility pairs. Default is None . area ( gpd.GeoDataFrame , optional): Area of interest. Default is None . dataset_year ( int , optional): Year of the dataset being used. Default is 2020 . one_km_res ( bool , optional): Flag for using 1km resolution data. Default is True . un_adjusted ( bool , optional): Flag for using UN-adjusted data. Default is True . nbhours ( int , optional): Number of non-busy hours per day. Default is 10 . oppopshare ( int , optional): Percentage of population using operator services. Default is 50 . enable_logging ( bool , optional): Flag to enable logging. Default is False .","title":"Initializing the class (init)"},{"location":"models-description/functions-documentation/#downlink-bitrate-get_dl_bitrate","text":"This method calculates the achievable downlink bitrate for given distances , considering multiple frequency bands (L850, L1800, L2600) and their respective bandwidths. The input is a list, numpy array, or pandas Series containing distances in meters. The output is a numpy array of downlink bitrates (in kbps) corresponding to each input distance. For each frequency band: Uses lookup tables to find bitrates corresponding to input distances. Handles out-of-range distances by assigning NaN values. Computes final bitrates as a weighted sum across all frequency bands.","title":"Downlink Bitrate (get_dl_bitrate)"},{"location":"models-description/functions-documentation/#resource-blocks-requirement-calculation-poiddatareq","text":"The poiddatareq method is designed to calculate the number of resource blocks (RBs) necessary to meet a specific download throughput target at a certain distance from a cell site. This method is integral to network capacity analysis as it helps determine if a cell site can provide the required service level at varying distances. The method proceeds as follows: It first checks whether the provided distance exceeds the maximum coverage radius of the cell site. If it does, the method concludes that the download throughput target cannot be met at that distance, and an infinite number of RBs are theoretically required. If the distance is within the acceptable range, the method searches for the achievable downlink bitrate at a given distance using the get_dl_bitrate function. The method then calculates the required number of RBs by dividing the download throughput target (converted to kbps) by the achievable bitrate per RB (accounting for the average number of RBs available for PDSCH). This method is vital for assessing the coverage and capacity limitations of a cell site and is instrumental in network planning and optimization efforts.","title":"Resource Blocks Requirement Calculation (poiddatareq)"},{"location":"models-description/functions-documentation/#bitrate-per-resource-block-calculation-brrbpopcd","text":"The brrbpopcd method calculates the bitrate available per resource block at a specified population center distance. This is a key performance indicator that reflects how the network's capacity is distributed spatially. The method involves the following steps: Using get_dl_bitrate , the method identifies the closest distance value that exceeds the given population center distance. It retrieves the achievable bitrate associated with that distance for the specified bandwidth. The method then divides the retrieved achievable bitrate by the average number of resource blocks available for PDSCH to determine the bitrate per resource block at the population center distance. This method is crucial for network performance analysis as it helps to gauge the efficiency of resource block usage in relation to the distance from the cell site, directly impacting the user experience.","title":"Bitrate Per Resource Block Calculation (brrbpopcd)"},{"location":"models-description/functions-documentation/#average-user-bitrate-in-non-busy-hour-calculation-avubrnonbh","text":"The avubrnonbh method computes the average bitrate experienced by a user during non-busy hours, providing an estimate of network capacity when it is not heavily loaded. The calculation is based on user data consumption patterns and considers the following parameters: The average user data traffic volume per month ( udatavmonth ) expressed in gigabytes. The percentage of network usage that occurs during non-busy hours ( nonbhu ). The method carries out a sequence of operations to transform the monthly data volume into an hourly rate, adjusting for the percentage of usage during non-busy hours, and converting the final figure into kilobits per second. The formula takes into account the average number of days in a month, the number of non-busy hours per day, and the conversion factors between gigabytes and kilobits. This metric is of significant value for network operators to ensure that their networks are equipped to handle user demands during off-peak times, which is essential for maintaining a high quality of service.","title":"Average User Bitrate in Non-Busy Hour Calculation (avubrnonbh)"},{"location":"models-description/functions-documentation/#user-population-bitrate-per-sector-upopbr","text":"This method calculates the total bitrate needed to serve a given population within a cell sector, taking into account the average user bitrate, mobile broadband subscription rate, and the operator's market share. Its inputs are the average user bitrate in non-busy hour in kbps ( avubrnonbh ) and the total population in the area served by the cell sector. Its output is the user Population Bitrate in kbps.","title":"User Population Bitrate Per Sector (upopbr)"},{"location":"models-description/functions-documentation/#user-population-resource-blocks-utilisation-upoprbu","text":"This method calculates the number of resource blocks utilized by the user population in a cell sector. Its inputs are the total bitrate required by the user population in kbps ( upopbr ) and the bitrate per resource block at population center distance in kbps ( brrbpopcd ).` Its output is the user population resource blocks utilisation in units.","title":"User Population Resource Blocks Utilisation (upoprbu)"},{"location":"models-description/functions-documentation/#cell-site-available-capacity-check-cellavcap","text":"This method calculates the available capacity at a cell site by subtracting the utilized resource blocks from the total available resource blocks. Its inputs are the number of resource blocks available for the Physical Downlink Shared Channel ( avrbpdsch ) and the number of resource blocks utilized by the user population ( upoprbu ).` The output is the The available capacity at the cell site.","title":"Cell Site Available Capacity Check (cellavcap)"},{"location":"models-description/functions-documentation/#sufficient-capacity-checker-sufcapch","text":"This method determines whether the available capacity at a cell site is sufficient to meet the required download throughput target. Its inputs are the available capacity at the cell site ( cellavcap ) and the Resource Blocks Download Throughput Target ( rbdlthtarg ). The output is a True/False flag indicating whether there is sufficient capacity (cellavcap > rbdlthtarg) or not (cellavcap <= rbdlthtarg).","title":"Sufficient Capacity Checker (sufcapch)"},{"location":"models-description/functions-documentation/#capacity-checker-capacity_checker","text":"This method performs a comprehensive capacity check for a cell site, combining the auxiliary functions above. Its inputs are: Distance to the Point of Interest ( d ) Population center distance ( popcd ) Monthly data usage per user ( udatavmonth ) Population served by the cell site ( pop ) The method calculates several intermediate values: Target data rate based on distance ( rbdlthtarg ) Bitrate per resource block at population center ( brrpopcd ) Average user bitrate in non-busy hours ( avubrnonbh ) It then uses these to compute the final outputs: User population bitrate ( upopbr ) User population resource block utilization ( upoprbu ) Available cell capacity ( cellavcap ) Capacity check result ( capcheck )","title":"Capacity Checker (capacity_checker)"},{"location":"models-description/functions-documentation/#capacity-checker-using-buffers-around-cell-sites-calculate_buffer_areas","text":"This method performs spatial analysis and capacity assessment for cell sites by creating buffer areas and calculating various metrics. For more information, please refer to the Network Capacity Model section of this documentation. The method doesn't take any inputs beyond the class attributes. It performs several key operations: Geodata preparation Buffer and ring creation around cell sites Visibility analysis (if needed) Capacity calculations at different levels The method calculates several intermediate values: Voronoi polygons for cell sites Buffer areas and rings around cell sites Visibility between POIs and cell sites Population per ring Resource block requirements for download throughput It then uses these to compute the final outputs: User population bitrate per ring User population resource block utilization Available cell capacity Capacity sufficiency check The output is a tuple containing:' A dictionary of GeoDataFrames: 'buffers': Buffer areas around cell sites 'rings': Ring areas around cell sites A GeoDataFrame of POIs within cell site coverage areas, including capacity analysis results","title":"Capacity Checker Using Buffers Around Cell Sites (calculate_buffer_areas)"},{"location":"models-description/rmalos-calculation/","text":"RMaLOS High-Level Functionality Overview Introduction The RMaLOS class encapsulates a model for simulating signal propagation in a Rural Macro-cell-Line-of-Sight (RMa-LOS) environment for wireless communication systems. This document provides a high-level overview of the functionalities provided by the RMaLOS class and the methodologies it uses for performing various calculations. Functionalities and Calculations The RMaLOS class offers three core methods, each designed to compute specific aspects of signal strength and quality in rural wireless communication scenarios: 1. Path Loss Calculation ( pathloss ) The pathloss method computes the attenuation of the signal, known as path loss, as it travels from the base station (BS) antenna to the user equipment (UE) transmitter. The factors considered for this computation include: hbs : The height of the BS antenna. hut : The height of the UE transmitter. f : The frequency at which the system operates. d : The distance between the BS and UE. h : The average height of the surrounding buildings. The method employs a specific path loss model tailored for line-of-sight conditions in rural areas. It introduces the concept of a breakpoint distance ( dbp ), which signifies a threshold beyond which the path loss increases at a different rate. Depending on whether the actual distance d is less than or greater than dbp , the method uses one of two formulas ( pl1 or pl2 ) to calculate the path loss. 2. Transmit Power Per Resource Block Calculation ( ptxrb ) The ptxrb method determines the power allocated to each Resource Block (RB), a fundamental frequency allocation unit in LTE systems. The calculation is based on: bw : The total bandwidth available. pnomref : The nominal reference power. The method considers the fixed frequency width of an RB (180 kHz) and adjusts the number of RBs to fit within the specified bandwidth, accounting for guard bands and standardized LTE bandwidth configurations. 3. Maximum Received Power Calculation ( lpmax ) The lpmax method calculates the peak power that the receiver's antenna is capable of receiving. This calculation incorporates: ptxrb : The transmit power per RB. gtx : The gain of the transmitting antenna. grx : The gain of the receiving antenna. pathloss : The path loss as computed by the pathloss method. By adding the transmit power and antenna gains and then subtracting the path loss, the method estimates the power level that would be received at the antenna. Conclusion The RMaLOS class provides essential tools for estimating and optimizing signal propagation in rural wireless networks. By considering key environmental and technical parameters, the class enables precise calculations of path loss, transmit power per RB, and received power at the antenna, which are vital for ensuring adequate network coverage and service quality.","title":"Link Budget Model"},{"location":"models-description/rmalos-calculation/#rmalos-high-level-functionality-overview","text":"","title":"RMaLOS High-Level Functionality Overview"},{"location":"models-description/rmalos-calculation/#introduction","text":"The RMaLOS class encapsulates a model for simulating signal propagation in a Rural Macro-cell-Line-of-Sight (RMa-LOS) environment for wireless communication systems. This document provides a high-level overview of the functionalities provided by the RMaLOS class and the methodologies it uses for performing various calculations.","title":"Introduction"},{"location":"models-description/rmalos-calculation/#functionalities-and-calculations","text":"The RMaLOS class offers three core methods, each designed to compute specific aspects of signal strength and quality in rural wireless communication scenarios:","title":"Functionalities and Calculations"},{"location":"models-description/rmalos-calculation/#1-path-loss-calculation-pathloss","text":"The pathloss method computes the attenuation of the signal, known as path loss, as it travels from the base station (BS) antenna to the user equipment (UE) transmitter. The factors considered for this computation include: hbs : The height of the BS antenna. hut : The height of the UE transmitter. f : The frequency at which the system operates. d : The distance between the BS and UE. h : The average height of the surrounding buildings. The method employs a specific path loss model tailored for line-of-sight conditions in rural areas. It introduces the concept of a breakpoint distance ( dbp ), which signifies a threshold beyond which the path loss increases at a different rate. Depending on whether the actual distance d is less than or greater than dbp , the method uses one of two formulas ( pl1 or pl2 ) to calculate the path loss.","title":"1. Path Loss Calculation (pathloss)"},{"location":"models-description/rmalos-calculation/#2-transmit-power-per-resource-block-calculation-ptxrb","text":"The ptxrb method determines the power allocated to each Resource Block (RB), a fundamental frequency allocation unit in LTE systems. The calculation is based on: bw : The total bandwidth available. pnomref : The nominal reference power. The method considers the fixed frequency width of an RB (180 kHz) and adjusts the number of RBs to fit within the specified bandwidth, accounting for guard bands and standardized LTE bandwidth configurations.","title":"2. Transmit Power Per Resource Block Calculation (ptxrb)"},{"location":"models-description/rmalos-calculation/#3-maximum-received-power-calculation-lpmax","text":"The lpmax method calculates the peak power that the receiver's antenna is capable of receiving. This calculation incorporates: ptxrb : The transmit power per RB. gtx : The gain of the transmitting antenna. grx : The gain of the receiving antenna. pathloss : The path loss as computed by the pathloss method. By adding the transmit power and antenna gains and then subtracting the path loss, the method estimates the power level that would be received at the antenna.","title":"3. Maximum Received Power Calculation (lpmax)"},{"location":"models-description/rmalos-calculation/#conclusion","text":"The RMaLOS class provides essential tools for estimating and optimizing signal propagation in rural wireless networks. By considering key environmental and technical parameters, the class enables precise calculations of path loss, transmit power per RB, and received power at the antenna, which are vital for ensuring adequate network coverage and service quality.","title":"Conclusion"},{"location":"user-guide/getting-started/","text":"Prerequisites Before you begin, ensure you have the following installed: - Python 3.9 - Conda - Jupyter Notebook or JupyterLab You can verify the installations by running these commands: python --version conda --version jupyter --version If any of these commands fail or show an outdated version: - Python: Download from python.org - Conda: Follow the official Conda installation guide - Jupyter: Install via Conda after setting up your environment. conda install jupyter Installation steps Clone the Repository: Clone the repository to your local machine using the following command: git clone git@ssh.dev.azure.com:v3/ITUINT/ConnectivityToolkit/mobile-network-capacity-model Navigate to the directory: cd mobile-network-capacity-model Create a virtual environment with the required dependencies via conda : conda env create --file environment.yml conda activate mobilecapacityenv Preparing your data In order to conduct your analysis, you will need to provide the tool with the following geospatial data in CSV format: Points of interest locations Cell site locations See the input_data section of this documentation page for more information. It is also possible to provide data on the visibility status between each point of interest and cell site, but this is not a requirement as the checker automates these calculations in the background. Running your analysis To conduct your analysis using the Mobile Network Capacity Model, follow these steps: Prepare Your Data : Place your input data files in the data/input_data/<country-code> directory. For example, for Spain, include your geospatial data in CSV format in sub-folder data/input_data/ESP . Use ISO-3 three-letter codes to identify your country. Ensure your data is in the correct format as specified in the technical documentation. Create a Jupyter Notebook to run your analysis : Copy the notebook template from notebooks/template.ipynb , and insert the copy in the folder notebooks . For example, notebooks/my_analysis.ipynb . Configure Analysis Parameters : In your analysis notebook (for example, notebooks/my_analysis.ipynb ) locate the configuration cells and adjust the parameters according to your specific analysis requirements. Execute the Analysis : Run through the notebook cells sequentially. Each cell contains explanations and code for different stages of the analysis. During the analysis run, auxiliary files related to topography (Source: NASA ) and population (Source: Worldpop ) in the area covered by the points of interest and cell sites will automatically be downloaded into the data/input_data/<country-code> folder (in sub-folders called srtm1 and population ). You do not need to directly manipulate these files. Review Results : After execution, find your output data and visualizations in the data/output_data/<country-code> directory. The notebook will also display key results and graphs inline. Iterate if Necessary : Based on your initial results, you may want to adjust parameters or input data. Simply update the relevant sections and re-run the affected cells or the entire notebook.","title":"Getting started"},{"location":"user-guide/getting-started/#prerequisites","text":"Before you begin, ensure you have the following installed: - Python 3.9 - Conda - Jupyter Notebook or JupyterLab You can verify the installations by running these commands: python --version conda --version jupyter --version If any of these commands fail or show an outdated version: - Python: Download from python.org - Conda: Follow the official Conda installation guide - Jupyter: Install via Conda after setting up your environment. conda install jupyter","title":"Prerequisites"},{"location":"user-guide/getting-started/#installation-steps","text":"Clone the Repository: Clone the repository to your local machine using the following command: git clone git@ssh.dev.azure.com:v3/ITUINT/ConnectivityToolkit/mobile-network-capacity-model Navigate to the directory: cd mobile-network-capacity-model Create a virtual environment with the required dependencies via conda : conda env create --file environment.yml conda activate mobilecapacityenv","title":"Installation steps"},{"location":"user-guide/getting-started/#preparing-your-data","text":"In order to conduct your analysis, you will need to provide the tool with the following geospatial data in CSV format: Points of interest locations Cell site locations See the input_data section of this documentation page for more information. It is also possible to provide data on the visibility status between each point of interest and cell site, but this is not a requirement as the checker automates these calculations in the background.","title":"Preparing your data"},{"location":"user-guide/getting-started/#running-your-analysis","text":"To conduct your analysis using the Mobile Network Capacity Model, follow these steps: Prepare Your Data : Place your input data files in the data/input_data/<country-code> directory. For example, for Spain, include your geospatial data in CSV format in sub-folder data/input_data/ESP . Use ISO-3 three-letter codes to identify your country. Ensure your data is in the correct format as specified in the technical documentation. Create a Jupyter Notebook to run your analysis : Copy the notebook template from notebooks/template.ipynb , and insert the copy in the folder notebooks . For example, notebooks/my_analysis.ipynb . Configure Analysis Parameters : In your analysis notebook (for example, notebooks/my_analysis.ipynb ) locate the configuration cells and adjust the parameters according to your specific analysis requirements. Execute the Analysis : Run through the notebook cells sequentially. Each cell contains explanations and code for different stages of the analysis. During the analysis run, auxiliary files related to topography (Source: NASA ) and population (Source: Worldpop ) in the area covered by the points of interest and cell sites will automatically be downloaded into the data/input_data/<country-code> folder (in sub-folders called srtm1 and population ). You do not need to directly manipulate these files. Review Results : After execution, find your output data and visualizations in the data/output_data/<country-code> directory. The notebook will also display key results and graphs inline. Iterate if Necessary : Based on your initial results, you may want to adjust parameters or input data. Simply update the relevant sections and re-run the affected cells or the entire notebook.","title":"Running your analysis"}]}