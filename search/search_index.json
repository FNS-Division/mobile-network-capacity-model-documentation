{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Mobile Network Capacity Model About The Mobile Network Capacity Model is a special tool that can figure out if the internet connection from a cell phone tower is strong enough to let places like hospitals, schools, and houses (which we call points of interest, or POIs) use the internet without any problems. This tool checks to see if there is enough bandwidth for everyone who needs it. The example picture below is a map. It shows where the cell phone towers are, the zones around them where people can use their phones, how many people live there, and where important places like hospitals and schools are located. The tool uses the map and colours to tell us if these important places can get enough bandwidth from the towers to use the internet properly. Red means there's not enough bandwidth, and green means there is. Repository structure mobile-network-capacity-model \u251c\u2500\u2500 README.md \u251c\u2500\u2500 app.py \u251c\u2500\u2500 data \u2502 \u251c\u2500\u2500 input_data \u2502 \u2502 \u251c\u2500\u2500 ESP-1697916284-6wv8-cellsite.csv \u2502 \u2502 \u251c\u2500\u2500 ESP-1708423221-tgah-visibility.csv \u2502 \u2502 \u251c\u2500\u2500 MobileBB_Traffic_per_Subscr_per_Month.csv \u2502 \u2502 \u251c\u2500\u2500 active-mobile-broadband-subscriptions_1711147050645.csv \u2502 \u2502 \u251c\u2500\u2500 area.gpkg \u2502 \u2502 \u251c\u2500\u2500 bwdistance_km.csv \u2502 \u2502 \u251c\u2500\u2500 bwdlachievbr_kbps.csv \u2502 \u2502 \u251c\u2500\u2500 bwrsrp_dbm.csv \u2502 \u2502 \u251c\u2500\u2500 bwulachievbr_kbps.csv \u2502 \u2502 \u251c\u2500\u2500 mobile-broadband-internet-traffic-within-the-country_1711147118571.csv \u2502 \u2502 \u2514\u2500\u2500 population.tif \u2502 \u2514\u2500\u2500 output_data \u2502 \u251c\u2500\u2500 MobileBB_Traffic_per_Subscr_per_Month.csv \u2502 \u2514\u2500\u2500 network_capacity.csv \u251c\u2500\u2500 environment.yml \u251c\u2500\u2500 logs \u2502 \u2514\u2500\u2500 app_timestamp.log \u251c\u2500\u2500 mobile_capacity \u2502 \u251c\u2500\u2500 capacity.py \u2502 \u2514\u2500\u2500 spatial.py \u251c\u2500\u2500 notebooks \u2502 \u2514\u2500\u2500 analyses.ipynb \u2514\u2500\u2500 tests \u251c\u2500\u2500 confest.py \u2514\u2500\u2500 unit \u2514\u2500\u2500 test_class.py Summary of methods Installation Steps Clone the Repository: Clone the repository to your local machine using the following command: git clone git@ssh.dev.azure.com:v3/ITUINT/ConnectivityToolkit/mobile-network-capacity-model Navigate to the directory: cd mobile-network-capacity-model Create a virtual environment with the required dependencies via conda : conda install -n base conda-libmamba-solver conda env create --file environment.yml --solver libmamba conda activate mobilecapacityenv Run analysis in notebooks Run the analysis in notebooks/app.ipynb Deploy streamlit app locally conda activate mobilecapacityenv streamlit run app.py Use keyborad shortcut Ctrl+C to terminate the local deployment. Keeping analysis outputs private To ensure that all Jupyter Notebook outputs are cleared before committing changes to the repository, we use nbstripout . By following these instructions, contributors to your project will ensure that Jupyter Notebook outputs are cleared before committing changes, helping to keep the repository clean and free of unnecessary data. Follow the steps below to install and enable nbstripout . First, you'll need to install nbstripout. You can do this using pip : pip install nbstripout Once nbstripout is installed, you need to enable it for your Git repository. Run the following command in the root directory of your repository: nbstripout --install This will configure nbstripout to automatically strip output from Jupyter Notebooks when you commit them to your repository. nbstripout --status","title":"Home"},{"location":"#mobile-network-capacity-model","text":"","title":"Mobile Network Capacity Model"},{"location":"#about","text":"The Mobile Network Capacity Model is a special tool that can figure out if the internet connection from a cell phone tower is strong enough to let places like hospitals, schools, and houses (which we call points of interest, or POIs) use the internet without any problems. This tool checks to see if there is enough bandwidth for everyone who needs it. The example picture below is a map. It shows where the cell phone towers are, the zones around them where people can use their phones, how many people live there, and where important places like hospitals and schools are located. The tool uses the map and colours to tell us if these important places can get enough bandwidth from the towers to use the internet properly. Red means there's not enough bandwidth, and green means there is.","title":"About"},{"location":"#repository-structure","text":"mobile-network-capacity-model \u251c\u2500\u2500 README.md \u251c\u2500\u2500 app.py \u251c\u2500\u2500 data \u2502 \u251c\u2500\u2500 input_data \u2502 \u2502 \u251c\u2500\u2500 ESP-1697916284-6wv8-cellsite.csv \u2502 \u2502 \u251c\u2500\u2500 ESP-1708423221-tgah-visibility.csv \u2502 \u2502 \u251c\u2500\u2500 MobileBB_Traffic_per_Subscr_per_Month.csv \u2502 \u2502 \u251c\u2500\u2500 active-mobile-broadband-subscriptions_1711147050645.csv \u2502 \u2502 \u251c\u2500\u2500 area.gpkg \u2502 \u2502 \u251c\u2500\u2500 bwdistance_km.csv \u2502 \u2502 \u251c\u2500\u2500 bwdlachievbr_kbps.csv \u2502 \u2502 \u251c\u2500\u2500 bwrsrp_dbm.csv \u2502 \u2502 \u251c\u2500\u2500 bwulachievbr_kbps.csv \u2502 \u2502 \u251c\u2500\u2500 mobile-broadband-internet-traffic-within-the-country_1711147118571.csv \u2502 \u2502 \u2514\u2500\u2500 population.tif \u2502 \u2514\u2500\u2500 output_data \u2502 \u251c\u2500\u2500 MobileBB_Traffic_per_Subscr_per_Month.csv \u2502 \u2514\u2500\u2500 network_capacity.csv \u251c\u2500\u2500 environment.yml \u251c\u2500\u2500 logs \u2502 \u2514\u2500\u2500 app_timestamp.log \u251c\u2500\u2500 mobile_capacity \u2502 \u251c\u2500\u2500 capacity.py \u2502 \u2514\u2500\u2500 spatial.py \u251c\u2500\u2500 notebooks \u2502 \u2514\u2500\u2500 analyses.ipynb \u2514\u2500\u2500 tests \u251c\u2500\u2500 confest.py \u2514\u2500\u2500 unit \u2514\u2500\u2500 test_class.py","title":"Repository structure"},{"location":"#summary-of-methods","text":"","title":"Summary of methods"},{"location":"#installation-steps","text":"Clone the Repository: Clone the repository to your local machine using the following command: git clone git@ssh.dev.azure.com:v3/ITUINT/ConnectivityToolkit/mobile-network-capacity-model Navigate to the directory: cd mobile-network-capacity-model Create a virtual environment with the required dependencies via conda : conda install -n base conda-libmamba-solver conda env create --file environment.yml --solver libmamba conda activate mobilecapacityenv Run analysis in notebooks Run the analysis in notebooks/app.ipynb Deploy streamlit app locally conda activate mobilecapacityenv streamlit run app.py Use keyborad shortcut Ctrl+C to terminate the local deployment.","title":"Installation Steps"},{"location":"#keeping-analysis-outputs-private","text":"To ensure that all Jupyter Notebook outputs are cleared before committing changes to the repository, we use nbstripout . By following these instructions, contributors to your project will ensure that Jupyter Notebook outputs are cleared before committing changes, helping to keep the repository clean and free of unnecessary data. Follow the steps below to install and enable nbstripout . First, you'll need to install nbstripout. You can do this using pip : pip install nbstripout Once nbstripout is installed, you need to enable it for your Git repository. Run the following command in the root directory of your repository: nbstripout --install This will configure nbstripout to automatically strip output from Jupyter Notebooks when you commit them to your repository. nbstripout --status","title":"Keeping analysis outputs private"},{"location":"license/","text":"","title":"License"},{"location":"models-description/capacity-calculation/","text":"Detailed Method Descriptions Introduction The Capacity class ... : Functionalities and Calculations The Capacity class ... : 1. Resource Blocks Requirement Calculation ( poiddatareq ) The poiddatareq method is designed to calculate the number of resource blocks (RBs) necessary to meet a specific download throughput target at a certain distance from a cell site. This method is integral to network capacity analysis as it helps determine if a cell site can provide the required service level at varying distances. The method proceeds as follows: It first checks whether the provided distance exceeds the maximum coverage radius of the cell site. If it does, the method concludes that the download throughput target cannot be met at that distance, and an infinite number of RBs are theoretically required. If the distance is within the acceptable range, the method searches for the closest higher distance value in the preloaded bwdistance_km dataset to identify the corresponding achievable downlink bitrate from the bwdlachievbr dataset for the given bandwidth. The method then calculates the required number of RBs by dividing the download throughput target (converted to kbps) by the achievable bitrate per RB (accounting for the average number of RBs available for PDSCH). The calculated number of required RBs is stored in the rbdlthtarg_result attribute for later reference. This method is vital for assessing the coverage and capacity limitations of a cell site and is instrumental in network planning and optimization efforts. 2. Bitrate Per Resource Block Calculation ( brrbpopcd ) The brrbpopcd method calculates the bitrate available per resource block at a specified population center distance. This is a key performance indicator that reflects how the network's capacity is distributed spatially. The method involves the following steps: Utilizing two preloaded datasets, bwdistance_km and bwdlachievbr , which contain information on distance samples for different bandwidths and their corresponding achievable downlink bitrates, the method identifies the closest distance value that exceeds the given population center distance. It retrieves the achievable bitrate associated with that distance for the specified bandwidth. The method then divides the retrieved achievable bitrate by the average number of resource blocks available for PDSCH to determine the bitrate per resource block at the population center distance. The result of this calculation is stored in the brrbpopcd_result attribute for subsequent use. This method is crucial for network performance analysis as it helps to gauge the efficiency of resource block usage in relation to the distance from the cell site, directly impacting the user experience. 3. Average User Bitrate in Non-Busy Hour Calculation ( avubrnonbh ) The avubrnonbh method computes the average bitrate experienced by a user during non-busy hours, providing an estimate of network capacity when it is not heavily loaded. The calculation is based on user data consumption patterns and considers the following parameters: The average user data traffic volume per month ( udatavmonth ) expressed in gigabytes. The percentage of network usage that occurs during non-busy hours ( nonbhu ). The method carries out a sequence of operations to transform the monthly data volume into an hourly rate, adjusting for the percentage of usage during non-busy hours, and converting the final figure into kilobits per second. The formula takes into account the average number of days in a month, the number of non-busy hours per day, and the conversion factors between gigabytes and kilobits. The calculated average user bitrate for non-busy hours is then stored in the avubrnonbh_result attribute. This metric is of significant value for network operators to ensure that their networks are equipped to handle user demands during off-peak times, which is essential for maintaining a high quality of service. Conclusion The Capacity class ...","title":"Network capacity Model"},{"location":"models-description/capacity-calculation/#detailed-method-descriptions","text":"","title":"Detailed Method Descriptions"},{"location":"models-description/capacity-calculation/#introduction","text":"The Capacity class ... :","title":"Introduction"},{"location":"models-description/capacity-calculation/#functionalities-and-calculations","text":"The Capacity class ... :","title":"Functionalities and Calculations"},{"location":"models-description/capacity-calculation/#1-resource-blocks-requirement-calculation-poiddatareq","text":"The poiddatareq method is designed to calculate the number of resource blocks (RBs) necessary to meet a specific download throughput target at a certain distance from a cell site. This method is integral to network capacity analysis as it helps determine if a cell site can provide the required service level at varying distances. The method proceeds as follows: It first checks whether the provided distance exceeds the maximum coverage radius of the cell site. If it does, the method concludes that the download throughput target cannot be met at that distance, and an infinite number of RBs are theoretically required. If the distance is within the acceptable range, the method searches for the closest higher distance value in the preloaded bwdistance_km dataset to identify the corresponding achievable downlink bitrate from the bwdlachievbr dataset for the given bandwidth. The method then calculates the required number of RBs by dividing the download throughput target (converted to kbps) by the achievable bitrate per RB (accounting for the average number of RBs available for PDSCH). The calculated number of required RBs is stored in the rbdlthtarg_result attribute for later reference. This method is vital for assessing the coverage and capacity limitations of a cell site and is instrumental in network planning and optimization efforts.","title":"1. Resource Blocks Requirement Calculation (poiddatareq)"},{"location":"models-description/capacity-calculation/#2-bitrate-per-resource-block-calculation-brrbpopcd","text":"The brrbpopcd method calculates the bitrate available per resource block at a specified population center distance. This is a key performance indicator that reflects how the network's capacity is distributed spatially. The method involves the following steps: Utilizing two preloaded datasets, bwdistance_km and bwdlachievbr , which contain information on distance samples for different bandwidths and their corresponding achievable downlink bitrates, the method identifies the closest distance value that exceeds the given population center distance. It retrieves the achievable bitrate associated with that distance for the specified bandwidth. The method then divides the retrieved achievable bitrate by the average number of resource blocks available for PDSCH to determine the bitrate per resource block at the population center distance. The result of this calculation is stored in the brrbpopcd_result attribute for subsequent use. This method is crucial for network performance analysis as it helps to gauge the efficiency of resource block usage in relation to the distance from the cell site, directly impacting the user experience.","title":"2. Bitrate Per Resource Block Calculation (brrbpopcd)"},{"location":"models-description/capacity-calculation/#3-average-user-bitrate-in-non-busy-hour-calculation-avubrnonbh","text":"The avubrnonbh method computes the average bitrate experienced by a user during non-busy hours, providing an estimate of network capacity when it is not heavily loaded. The calculation is based on user data consumption patterns and considers the following parameters: The average user data traffic volume per month ( udatavmonth ) expressed in gigabytes. The percentage of network usage that occurs during non-busy hours ( nonbhu ). The method carries out a sequence of operations to transform the monthly data volume into an hourly rate, adjusting for the percentage of usage during non-busy hours, and converting the final figure into kilobits per second. The formula takes into account the average number of days in a month, the number of non-busy hours per day, and the conversion factors between gigabytes and kilobits. The calculated average user bitrate for non-busy hours is then stored in the avubrnonbh_result attribute. This metric is of significant value for network operators to ensure that their networks are equipped to handle user demands during off-peak times, which is essential for maintaining a high quality of service.","title":"3. Average User Bitrate in Non-Busy Hour Calculation (avubrnonbh)"},{"location":"models-description/capacity-calculation/#conclusion","text":"The Capacity class ...","title":"Conclusion"},{"location":"models-description/rmalos-calculation/","text":"RMaLOS High-Level Functionality Overview Introduction The RMaLOS class encapsulates a model for simulating signal propagation in a Rural Macro-cell-Line-of-Sight (RMa-LOS) environment for wireless communication systems. This document provides a high-level overview of the functionalities provided by the RMaLOS class and the methodologies it uses for performing various calculations. Functionalities and Calculations The RMaLOS class offers three core methods, each designed to compute specific aspects of signal strength and quality in rural wireless communication scenarios: 1. Path Loss Calculation ( pathloss ) The pathloss method computes the attenuation of the signal, known as path loss, as it travels from the base station (BS) antenna to the user equipment (UE) transmitter. The factors considered for this computation include: hbs : The height of the BS antenna. hut : The height of the UE transmitter. f : The frequency at which the system operates. d : The distance between the BS and UE. h : The average height of the surrounding buildings. The method employs a specific path loss model tailored for line-of-sight conditions in rural areas. It introduces the concept of a breakpoint distance ( dbp ), which signifies a threshold beyond which the path loss increases at a different rate. Depending on whether the actual distance d is less than or greater than dbp , the method uses one of two formulas ( pl1 or pl2 ) to calculate the path loss. 2. Transmit Power Per Resource Block Calculation ( ptxrb ) The ptxrb method determines the power allocated to each Resource Block (RB), a fundamental frequency allocation unit in LTE systems. The calculation is based on: bw : The total bandwidth available. pnomref : The nominal reference power. The method considers the fixed frequency width of an RB (180 kHz) and adjusts the number of RBs to fit within the specified bandwidth, accounting for guard bands and standardized LTE bandwidth configurations. 3. Maximum Received Power Calculation ( lpmax ) The lpmax method calculates the peak power that the receiver's antenna is capable of receiving. This calculation incorporates: ptxrb : The transmit power per RB. gtx : The gain of the transmitting antenna. grx : The gain of the receiving antenna. pathloss : The path loss as computed by the pathloss method. By adding the transmit power and antenna gains and then subtracting the path loss, the method estimates the power level that would be received at the antenna. Conclusion The RMaLOS class provides essential tools for estimating and optimizing signal propagation in rural wireless networks. By considering key environmental and technical parameters, the class enables precise calculations of path loss, transmit power per RB, and received power at the antenna, which are vital for ensuring adequate network coverage and service quality.","title":"Link Budget Model"},{"location":"models-description/rmalos-calculation/#rmalos-high-level-functionality-overview","text":"","title":"RMaLOS High-Level Functionality Overview"},{"location":"models-description/rmalos-calculation/#introduction","text":"The RMaLOS class encapsulates a model for simulating signal propagation in a Rural Macro-cell-Line-of-Sight (RMa-LOS) environment for wireless communication systems. This document provides a high-level overview of the functionalities provided by the RMaLOS class and the methodologies it uses for performing various calculations.","title":"Introduction"},{"location":"models-description/rmalos-calculation/#functionalities-and-calculations","text":"The RMaLOS class offers three core methods, each designed to compute specific aspects of signal strength and quality in rural wireless communication scenarios:","title":"Functionalities and Calculations"},{"location":"models-description/rmalos-calculation/#1-path-loss-calculation-pathloss","text":"The pathloss method computes the attenuation of the signal, known as path loss, as it travels from the base station (BS) antenna to the user equipment (UE) transmitter. The factors considered for this computation include: hbs : The height of the BS antenna. hut : The height of the UE transmitter. f : The frequency at which the system operates. d : The distance between the BS and UE. h : The average height of the surrounding buildings. The method employs a specific path loss model tailored for line-of-sight conditions in rural areas. It introduces the concept of a breakpoint distance ( dbp ), which signifies a threshold beyond which the path loss increases at a different rate. Depending on whether the actual distance d is less than or greater than dbp , the method uses one of two formulas ( pl1 or pl2 ) to calculate the path loss.","title":"1. Path Loss Calculation (pathloss)"},{"location":"models-description/rmalos-calculation/#2-transmit-power-per-resource-block-calculation-ptxrb","text":"The ptxrb method determines the power allocated to each Resource Block (RB), a fundamental frequency allocation unit in LTE systems. The calculation is based on: bw : The total bandwidth available. pnomref : The nominal reference power. The method considers the fixed frequency width of an RB (180 kHz) and adjusts the number of RBs to fit within the specified bandwidth, accounting for guard bands and standardized LTE bandwidth configurations.","title":"2. Transmit Power Per Resource Block Calculation (ptxrb)"},{"location":"models-description/rmalos-calculation/#3-maximum-received-power-calculation-lpmax","text":"The lpmax method calculates the peak power that the receiver's antenna is capable of receiving. This calculation incorporates: ptxrb : The transmit power per RB. gtx : The gain of the transmitting antenna. grx : The gain of the receiving antenna. pathloss : The path loss as computed by the pathloss method. By adding the transmit power and antenna gains and then subtracting the path loss, the method estimates the power level that would be received at the antenna.","title":"3. Maximum Received Power Calculation (lpmax)"},{"location":"models-description/rmalos-calculation/#conclusion","text":"The RMaLOS class provides essential tools for estimating and optimizing signal propagation in rural wireless networks. By considering key environmental and technical parameters, the class enables precise calculations of path loss, transmit power per RB, and received power at the antenna, which are vital for ensuring adequate network coverage and service quality.","title":"Conclusion"},{"location":"user-guide/getting-started/","text":"","title":"Getting started"}]}